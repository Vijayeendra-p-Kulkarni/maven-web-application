pipeline {
             agent any 
             tools {
               maven 'maven3.9.5'
                   }
stages {
stage ('CheckOut Code') {
steps {
    notifyBuild('STARTED')
    git branch: 'development', credentialsId: '7a27d5fb-d748-4aa5-b44d-785152d3422f', url: 'https://github.com/Vijayeendra-p-Kulkarni/maven-web-application.git'
}
}
stage ('BuildCode') {
steps {
sh "mvn clean package"
}
}
stage ('SonarQube Report') {
steps {
sh "mvn sonar:sonar"
}
}
stage ('DeployToNexus') {
steps {
sh "mvn clean deploy"
}
}
stage ('UploadToTomcat') {
steps {
sshagent(['227b3e65-fb43-498a-be7b-a0fdedf74b1e']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.13.183:/opt/apache-tomcat-9.0.82/webapps"
 }
}
}
} //stages closing
post {
  success {
    notifyBuild(currentBuild.result)
  }
  failure {
   notifyBuild(currentBuild.result)
  }
}
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#citi-bank-project')
}







































